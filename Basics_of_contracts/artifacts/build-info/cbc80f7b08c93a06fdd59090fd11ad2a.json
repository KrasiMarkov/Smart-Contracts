{
	"id": "cbc80f7b08c93a06fdd59090fd11ad2a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"Basics_of_contracts/Ownership.sol": {
				"content": "pragma solidity 0.4.24;\r\n\r\ncontract OwnerLab {\r\n\r\n    address public owner;\r\n\r\n    address public proposedOwner;\r\n\r\n    uint timeLimit;\r\n\r\n    event OwnershipTransferred (address indexed priviousOwner, address indexed newOwner); \r\n    event OwnershipAccepted (address indexed newOwner); \r\n    \r\n\r\n    constructor() public {\r\n\r\n       owner = msg.sender;\r\n    }\r\n\r\n\r\n    modifier onlyOwner {\r\n\r\n        require(msg.sender == owner, \"Can be invoked by the owner only!\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyProposedOwner {\r\n\r\n        require(msg.sender == proposedOwner, \"Can be invoked by the proposed owner only!\");\r\n        _;\r\n    }\r\n    \r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n\r\n        require(newOwner != address(0x0));\r\n\r\n        emit OwnershipTransferred (owner, newOwner); \r\n\r\n        proposedOwner = newOwner;\r\n\r\n        timeLimit = now;\r\n\r\n    }\r\n\r\n    function acceptOwnership() public onlyProposedOwner {\r\n\r\n        require(now < timeLimit + 30 seconds);\r\n\r\n        emit OwnershipAccepted (msg.sender);\r\n\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Basics_of_contracts/Ownership.sol": {
				"OwnerLab": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "proposedOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "priviousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipAccepted",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Basics_of_contracts/Ownership.sol\":27:1095  contract OwnerLab {\r... */\n  mstore(0x40, 0x80)\n    /* \"Basics_of_contracts/Ownership.sol\":301:360  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Basics_of_contracts/Ownership.sol\":301:360  constructor() public {\r... */\n  pop\n    /* \"Basics_of_contracts/Ownership.sol\":342:352  msg.sender */\n  caller\n    /* \"Basics_of_contracts/Ownership.sol\":334:339  owner */\n  0x0\n  dup1\n    /* \"Basics_of_contracts/Ownership.sol\":334:352  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Basics_of_contracts/Ownership.sol\":27:1095  contract OwnerLab {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Basics_of_contracts/Ownership.sol\":27:1095  contract OwnerLab {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x79ba5097\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd153b60c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Basics_of_contracts/Ownership.sol\":899:1088  function acceptOwnership() public onlyProposedOwner {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"Basics_of_contracts/Ownership.sol\":899:1088  function acceptOwnership() public onlyProposedOwner {\r... */\n      pop\n      tag_7\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"Basics_of_contracts/Ownership.sol\":54:74  address public owner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"Basics_of_contracts/Ownership.sol\":54:74  address public owner */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basics_of_contracts/Ownership.sol\":83:111  address public proposedOwner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"Basics_of_contracts/Ownership.sol\":83:111  address public proposedOwner */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Basics_of_contracts/Ownership.sol\":651:891  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"Basics_of_contracts/Ownership.sol\":651:891  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      tag_16\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"Basics_of_contracts/Ownership.sol\":899:1088  function acceptOwnership() public onlyProposedOwner {\r... */\n    tag_8:\n        /* \"Basics_of_contracts/Ownership.sol\":557:570  proposedOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basics_of_contracts/Ownership.sol\":543:570  msg.sender == proposedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basics_of_contracts/Ownership.sol\":543:553  msg.sender */\n      caller\n        /* \"Basics_of_contracts/Ownership.sol\":543:570  msg.sender == proposedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Basics_of_contracts/Ownership.sol\":535:617  require(msg.sender == proposedOwner, \"Can be invoked by the proposed owner only!\") */\n      iszero\n      iszero\n      tag_19\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e20626520696e766f6b6564206279207468652070726f706f736564206f\n      dup2\n      mstore\n      0x20\n      add\n      0x776e6572206f6e6c792100000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"Basics_of_contracts/Ownership.sol\":990:1000  30 seconds */\n      0x1e\n        /* \"Basics_of_contracts/Ownership.sol\":978:987  timeLimit */\n      sload(0x2)\n        /* \"Basics_of_contracts/Ownership.sol\":978:1000  timeLimit + 30 seconds */\n      add\n        /* \"Basics_of_contracts/Ownership.sol\":972:975  now */\n      timestamp\n        /* \"Basics_of_contracts/Ownership.sol\":972:1000  now < timeLimit + 30 seconds */\n      lt\n        /* \"Basics_of_contracts/Ownership.sol\":964:1001  require(now < timeLimit + 30 seconds) */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_21:\n        /* \"Basics_of_contracts/Ownership.sol\":1038:1048  msg.sender */\n      caller\n        /* \"Basics_of_contracts/Ownership.sol\":1019:1049  OwnershipAccepted (msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb27970c1714b28277b78cc17ac2fe9556e7f048cd48358cffe3dc7d547608fdc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Basics_of_contracts/Ownership.sol\":1070:1080  msg.sender */\n      caller\n        /* \"Basics_of_contracts/Ownership.sol\":1062:1067  owner */\n      0x0\n      dup1\n        /* \"Basics_of_contracts/Ownership.sol\":1062:1080  owner = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Basics_of_contracts/Ownership.sol\":899:1088  function acceptOwnership() public onlyProposedOwner {\r... */\n      jump\t// out\n        /* \"Basics_of_contracts/Ownership.sol\":54:74  address public owner */\n    tag_11:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Basics_of_contracts/Ownership.sol\":83:111  address public proposedOwner */\n    tag_14:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Basics_of_contracts/Ownership.sol\":651:891  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_17:\n        /* \"Basics_of_contracts/Ownership.sol\":424:429  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basics_of_contracts/Ownership.sol\":410:429  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basics_of_contracts/Ownership.sol\":410:420  msg.sender */\n      caller\n        /* \"Basics_of_contracts/Ownership.sol\":410:429  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Basics_of_contracts/Ownership.sol\":402:467  require(msg.sender == owner, \"Can be invoked by the owner only!\") */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e20626520696e766f6b656420627920746865206f776e6572206f6e6c79\n      dup2\n      mstore\n      0x20\n      add\n      0x2100000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"Basics_of_contracts/Ownership.sol\":754:757  0x0 */\n      0x0\n        /* \"Basics_of_contracts/Ownership.sol\":734:758  newOwner != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basics_of_contracts/Ownership.sol\":734:742  newOwner */\n      dup2\n        /* \"Basics_of_contracts/Ownership.sol\":734:758  newOwner != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Basics_of_contracts/Ownership.sol\":726:759  require(newOwner != address(0x0)) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"Basics_of_contracts/Ownership.sol\":806:814  newOwner */\n      dup1\n        /* \"Basics_of_contracts/Ownership.sol\":777:815  OwnershipTransferred (owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basics_of_contracts/Ownership.sol\":799:804  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Basics_of_contracts/Ownership.sol\":777:815  OwnershipTransferred (owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Basics_of_contracts/Ownership.sol\":845:853  newOwner */\n      dup1\n        /* \"Basics_of_contracts/Ownership.sol\":829:842  proposedOwner */\n      0x1\n      0x0\n        /* \"Basics_of_contracts/Ownership.sol\":829:853  proposedOwner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Basics_of_contracts/Ownership.sol\":878:881  now */\n      timestamp\n        /* \"Basics_of_contracts/Ownership.sol\":866:875  timeLimit */\n      0x2\n        /* \"Basics_of_contracts/Ownership.sol\":866:881  timeLimit = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Basics_of_contracts/Ownership.sol\":651:891  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820eea48b6f7f760e91a68f36bc6920ee418412ce1bb3cf57e17cae421bccf9ce920029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610555806100606000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806379ba5097146100675780638da5cb5b1461007e578063d153b60c146100d5578063f2fde38b1461012c575b600080fd5b34801561007357600080fd5b5061007c61016f565b005b34801561008a57600080fd5b506100936102f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea610317565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013857600080fd5b5061016d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061033d565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43616e20626520696e766f6b6564206279207468652070726f706f736564206f81526020017f776e6572206f6e6c79210000000000000000000000000000000000000000000081525060400191505060405180910390fd5b601e600254014210151561026d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167fb27970c1714b28277b78cc17ac2fe9556e7f048cd48358cffe3dc7d547608fdc60405160405180910390a2336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610427576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f43616e20626520696e766f6b656420627920746865206f776e6572206f6e6c7981526020017f210000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561046357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600281905550505600a165627a7a72305820eea48b6f7f760e91a68f36bc6920ee418412ce1bb3cf57e17cae421bccf9ce920029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x555 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xD153B60C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x33D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E20626520696E766F6B6564206279207468652070726F706F736564206F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x776E6572206F6E6C792100000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH1 0x2 SLOAD ADD TIMESTAMP LT ISZERO ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB27970C1714B28277B78CC17AC2FE9556E7F048CD48358CFFE3DC7D547608FDC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E20626520696E766F6B656420627920746865206F776E6572206F6E6C79 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xee LOG4 DUP12 PUSH16 0x7F760E91A68F36BC6920EE418412CE1B 0xb3 0xcf JUMPI 0xe1 PUSH29 0xAE421BCCF9CE9200290000000000000000000000000000000000000000 ",
							"sourceMap": "27:1068:0:-;;;301:59;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:59:0;342:10;334:5;;:18;;;;;;;;;;;;;;;;;;27:1068;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806379ba5097146100675780638da5cb5b1461007e578063d153b60c146100d5578063f2fde38b1461012c575b600080fd5b34801561007357600080fd5b5061007c61016f565b005b34801561008a57600080fd5b506100936102f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea610317565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013857600080fd5b5061016d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061033d565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43616e20626520696e766f6b6564206279207468652070726f706f736564206f81526020017f776e6572206f6e6c79210000000000000000000000000000000000000000000081525060400191505060405180910390fd5b601e600254014210151561026d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167fb27970c1714b28277b78cc17ac2fe9556e7f048cd48358cffe3dc7d547608fdc60405160405180910390a2336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610427576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f43616e20626520696e766f6b656420627920746865206f776e6572206f6e6c7981526020017f210000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561046357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600281905550505600a165627a7a72305820eea48b6f7f760e91a68f36bc6920ee418412ce1bb3cf57e17cae421bccf9ce920029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xD153B60C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x33D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E20626520696E766F6B6564206279207468652070726F706F736564206F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x776E6572206F6E6C792100000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH1 0x2 SLOAD ADD TIMESTAMP LT ISZERO ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB27970C1714B28277B78CC17AC2FE9556E7F048CD48358CFFE3DC7D547608FDC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E20626520696E766F6B656420627920746865206F776E6572206F6E6C79 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xee LOG4 DUP12 PUSH16 0x7F760E91A68F36BC6920EE418412CE1B 0xb3 0xcf JUMPI 0xe1 PUSH29 0xAE421BCCF9CE9200290000000000000000000000000000000000000000 ",
							"sourceMap": "27:1068:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;899:189;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:189:0;;;;;;54:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;54:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;83:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;83:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;651:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;651:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;899:189;557:13;;;;;;;;;;;543:27;;:10;:27;;;535:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:10;978:9;;:22;972:3;:28;964:37;;;;;;;;1038:10;1019:30;;;;;;;;;;;;1070:10;1062:5;;:18;;;;;;;;;;;;;;;;;;899:189::o;54:20::-;;;;;;;;;;;;;:::o;83:28::-;;;;;;;;;;;;;:::o;651:240::-;424:5;;;;;;;;;;;410:19;;:10;:19;;;402:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:3;734:24;;:8;:24;;;;726:33;;;;;;;;806:8;777:38;;799:5;;;;;;;;;;;777:38;;;;;;;;;;;;845:8;829:13;;:24;;;;;;;;;;;;;;;;;;878:3;866:9;:15;;;;651:240;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "273000",
								"executionCost": "20578",
								"totalCost": "293578"
							},
							"external": {
								"acceptOwnership()": "22069",
								"owner()": "464",
								"proposedOwner()": "486",
								"transferOwnership(address)": "42644"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1095,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "MSTORE"
								},
								{
									"begin": 301,
									"end": 360,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 301,
									"end": 360,
									"name": "POP"
								},
								{
									"begin": 342,
									"end": 352,
									"name": "CALLER"
								},
								{
									"begin": 334,
									"end": 339,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 339,
									"name": "DUP1"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "EXP"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "SLOAD"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "MUL"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "NOT"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "AND"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "DUP4"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "AND"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "MUL"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "OR"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "SSTORE"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1095,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820eea48b6f7f760e91a68f36bc6920ee418412ce1bb3cf57e17cae421bccf9ce920029",
									".code": [
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "DIV"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "AND"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "D153B60C"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1095,
											"name": "REVERT"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "JUMP"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "STOP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "JUMPDEST"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "POP"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "JUMP"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "JUMPDEST"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "MLOAD"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "DUP1"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "DUP3"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "AND"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "AND"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "DUP2"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "MSTORE"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "ADD"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "SWAP2"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "POP"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "POP"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "MLOAD"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "DUP1"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "SWAP2"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "SUB"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "SWAP1"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "RETURN"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "SUB"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "SWAP3"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "JUMP"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "STOP"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SLOAD"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "EXP"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "SWAP1"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "DIV"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 570,
											"name": "AND"
										},
										{
											"begin": 543,
											"end": 570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 543,
											"end": 570,
											"name": "AND"
										},
										{
											"begin": 543,
											"end": 553,
											"name": "CALLER"
										},
										{
											"begin": 543,
											"end": 570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 543,
											"end": 570,
											"name": "AND"
										},
										{
											"begin": 543,
											"end": 570,
											"name": "EQ"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "ISZERO"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "ISZERO"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "JUMPI"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "MLOAD"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP2"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "MSTORE"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP3"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP2"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "SUB"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP3"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "MSTORE"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP2"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "MSTORE"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "43616E20626520696E766F6B6564206279207468652070726F706F736564206F"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP2"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "MSTORE"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "776E6572206F6E6C792100000000000000000000000000000000000000000000"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP2"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "MSTORE"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "POP"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "SWAP2"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "POP"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "POP"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "MLOAD"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "SWAP2"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "SUB"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "SWAP1"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "REVERT"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 535,
											"end": 617,
											"name": "JUMPDEST"
										},
										{
											"begin": 990,
											"end": 1000,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "SLOAD"
										},
										{
											"begin": 978,
											"end": 1000,
											"name": "ADD"
										},
										{
											"begin": 972,
											"end": 975,
											"name": "TIMESTAMP"
										},
										{
											"begin": 972,
											"end": 1000,
											"name": "LT"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "ISZERO"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "ISZERO"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "REVERT"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 964,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 1038,
											"end": 1048,
											"name": "CALLER"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "AND"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "PUSH",
											"value": "B27970C1714B28277B78CC17AC2FE9556E7F048CD48358CFFE3DC7D547608FDC"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "MLOAD"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "MLOAD"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "DUP1"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "SWAP2"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "SUB"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "SWAP1"
										},
										{
											"begin": 1019,
											"end": 1049,
											"name": "LOG2"
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "CALLER"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "DUP1"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "EXP"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "DUP2"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "SLOAD"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "DUP2"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "MUL"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "NOT"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "AND"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "SWAP1"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "DUP4"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "AND"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "MUL"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "OR"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "SWAP1"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "SSTORE"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 1088,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 54,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "JUMPDEST"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "SWAP1"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "SLOAD"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "SWAP1"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "EXP"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "SWAP1"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "DIV"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "AND"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "DUP2"
										},
										{
											"begin": 83,
											"end": 111,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "DUP1"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "SWAP1"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "SLOAD"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "SWAP1"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "EXP"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "SWAP1"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "DIV"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "CALLER"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 429,
											"name": "EQ"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "ISZERO"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "ISZERO"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "JUMPI"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "MLOAD"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP3"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "SUB"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP3"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "43616E20626520696E766F6B656420627920746865206F776E6572206F6E6C79"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "2100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "SWAP2"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "MLOAD"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "SWAP2"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "SUB"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "SWAP1"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "REVERT"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 402,
											"end": 467,
											"name": "JUMPDEST"
										},
										{
											"begin": 754,
											"end": 757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 734,
											"end": 758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 758,
											"name": "AND"
										},
										{
											"begin": 734,
											"end": 742,
											"name": "DUP2"
										},
										{
											"begin": 734,
											"end": 758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 734,
											"end": 758,
											"name": "AND"
										},
										{
											"begin": 734,
											"end": 758,
											"name": "EQ"
										},
										{
											"begin": 734,
											"end": 758,
											"name": "ISZERO"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "ISZERO"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "ISZERO"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "JUMPI"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "DUP1"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "REVERT"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 726,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 806,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "AND"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SLOAD"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "EXP"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "DIV"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 799,
											"end": 804,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "MLOAD"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "MLOAD"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "DUP1"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "SWAP2"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "SUB"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 815,
											"name": "LOG3"
										},
										{
											"begin": 845,
											"end": 853,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 842,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 829,
											"end": 842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "EXP"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "DUP2"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "SLOAD"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "DUP2"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "MUL"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "NOT"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "AND"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "SWAP1"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "DUP4"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "AND"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "MUL"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "OR"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "SWAP1"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "SSTORE"
										},
										{
											"begin": 829,
											"end": 853,
											"name": "POP"
										},
										{
											"begin": 878,
											"end": 881,
											"name": "TIMESTAMP"
										},
										{
											"begin": 866,
											"end": 875,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 866,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 866,
											"end": 881,
											"name": "SWAP1"
										},
										{
											"begin": 866,
											"end": 881,
											"name": "SSTORE"
										},
										{
											"begin": 866,
											"end": 881,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 891,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"proposedOwner()": "d153b60c",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"priviousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipAccepted\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Basics_of_contracts/Ownership.sol\":\"OwnerLab\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Basics_of_contracts/Ownership.sol\":{\"keccak256\":\"0xde12c19d958546d843b3405a916619be9aebbd57363753ce1f838470d4c4a016\",\"urls\":[\"bzzr://599c51f699791e76db1285f57f5bba4a0d7eff0e874f4ec3e316f3abff2d50fe\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Basics_of_contracts/Ownership.sol": {
				"ast": {
					"absolutePath": "Basics_of_contracts/Ownership.sol",
					"exportedSymbols": {
						"OwnerLab": [
							104
						]
					},
					"id": 105,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104
							],
							"name": "OwnerLab",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "54:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "54:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "proposedOwner",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "83:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "83:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "timeLimit",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "120:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "120:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"name": "priviousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "171:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "202:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "170:57:0"
									},
									"src": "143:85:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "OwnershipAccepted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "260:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "259:26:0"
									},
									"src": "235:51:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "322:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "334:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "342:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "342:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "334:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "334:18:0"
											}
										]
									},
									"documentation": null,
									"id": 26,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:0:0"
									},
									"scope": 104,
									"src": "301:59:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "389:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 29,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "410:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "410:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 31,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "424:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "410:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e20626520696e766f6b656420627920746865206f776e6572206f6e6c7921",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "431:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7862ef50d6e1a6667d7467f79ea569758e9d2041afc870033aac058b9ef7f575",
																"typeString": "literal_string \"Can be invoked by the owner only!\""
															},
															"value": "Can be invoked by the owner only!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7862ef50d6e1a6667d7467f79ea569758e9d2041afc870033aac058b9ef7f575",
																"typeString": "literal_string \"Can be invoked by the owner only!\""
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															122,
															123
														],
														"referencedDeclaration": 123,
														"src": "402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "402:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "402:65:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "478:1:0"
											}
										]
									},
									"documentation": null,
									"id": 38,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:0:0"
									},
									"src": "370:117:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "522:115:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 41,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "543:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "543:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 43,
																"name": "proposedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "557:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "543:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e20626520696e766f6b6564206279207468652070726f706f736564206f776e6572206f6e6c7921",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "572:44:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69e108f4160c62c1fb852ca4b62e508888fd73e55ac67fa2eef0e5696fba7d9d",
																"typeString": "literal_string \"Can be invoked by the proposed owner only!\""
															},
															"value": "Can be invoked by the proposed owner only!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69e108f4160c62c1fb852ca4b62e508888fd73e55ac67fa2eef0e5696fba7d9d",
																"typeString": "literal_string \"Can be invoked by the proposed owner only!\""
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															122,
															123
														],
														"referencedDeclaration": 123,
														"src": "535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "535:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "535:82:0"
											},
											{
												"id": 48,
												"nodeType": "PlaceholderStatement",
												"src": "628:1:0"
											}
										]
									},
									"documentation": null,
									"id": 50,
									"name": "onlyProposedOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:0"
									},
									"src": "495:142:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "713:178:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "734:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830",
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "754:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "746:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "746:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "734:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															122,
															123
														],
														"referencedDeclaration": 122,
														"src": "726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "726:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "726:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 66,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "799:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 67,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "806:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 65,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "777:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "777:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "EmitStatement",
												"src": "772:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 70,
														"name": "proposedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "829:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 71,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "845:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "829:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "829:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 74,
														"name": "timeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "866:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "878:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "866:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "866:15:0"
											}
										]
									},
									"documentation": null,
									"id": 79,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 55,
											"modifierName": {
												"argumentTypes": null,
												"id": 54,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 38,
												"src": "703:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "703:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "678:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "677:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "713:0:0"
									},
									"scope": 104,
									"src": "651:240:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "951:137:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "972:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 86,
																	"name": "timeLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "978:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "990:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "978:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "972:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															122,
															123
														],
														"referencedDeclaration": 122,
														"src": "964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "964:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "964:37:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 93,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "1038:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1038:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 92,
														"name": "OwnershipAccepted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1019:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "EmitStatement",
												"src": "1014:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 97,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1062:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 98,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "1070:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1070:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1062:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1062:18:0"
											}
										]
									},
									"documentation": null,
									"id": 103,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 82,
											"modifierName": {
												"argumentTypes": null,
												"id": 81,
												"name": "onlyProposedOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 50,
												"src": "933:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "933:17:0"
										}
									],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:0"
									},
									"scope": 104,
									"src": "899:189:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 105,
							"src": "27:1068:0"
						}
					],
					"src": "0:1095:0"
				},
				"id": 0
			}
		}
	}
}