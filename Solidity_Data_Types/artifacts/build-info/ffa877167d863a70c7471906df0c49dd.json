{
	"id": "ffa877167d863a70c7471906df0c49dd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity_Data_Types/Agreement.sol": {
				"content": "pragma solidity 0.4.24;\r\n\r\ncontract Agreement {\r\n\r\n  address[] public owners;\r\n  uint public nextToVote = 0;\r\n\r\n  struct Proposer { \r\n    \r\n    uint value;\r\n    address addr;\r\n    uint timestamp;\r\n  }\r\n\r\n  constructor(address[] _owners) public {\r\n\r\n    owners = _owners;\r\n  }\r\n\r\n\r\n  Proposer public proposal;\r\n\r\n\r\n  \r\n  modifier canPropose {\r\n\r\n    for(uint index = 0; index < owners.length; index++) {\r\n\t\t\tif(owners[index] == msg.sender) {\r\n\t\t\t\t_;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n\r\n  function() public payable {}\r\n\r\n  \r\n  function propose(uint value, address addr) public canPropose {\r\n\r\n\t\trequire(now > proposal.timestamp + 5 minutes);\r\n\t\t\r\n\t\tproposal = Proposer(value, addr, now);\r\n\t\tnextToVote = 0;\r\n\t}\r\n\r\n\r\n  function vote() public {\r\n\t\r\n\t\trequire(nextToVote < owners.length);\r\n\t\trequire(owners[nextToVote] == msg.sender);\r\n\t\trequire(now <= proposal.timestamp + 5 minutes);\r\n\t\trequire(address(this).balance >= proposal.value);\r\n\t\t\r\n\t\tnextToVote++;\r\n\t\t\r\n\t\tif(nextToVote >= owners.length) {\r\n\t\t\tproposal.addr.transfer(proposal.value);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Solidity_Data_Types/Agreement.sol": {
				"Agreement": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "owners",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "value",
									"type": "uint256"
								},
								{
									"name": "addr",
									"type": "address"
								}
							],
							"name": "propose",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "proposal",
							"outputs": [
								{
									"name": "value",
									"type": "uint256"
								},
								{
									"name": "addr",
									"type": "address"
								},
								{
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nextToVote",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_owners",
									"type": "address[]"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Solidity_Data_Types/Agreement.sol\":27:1054  contract Agreement {\r... */\n  mstore(0x40, 0x80)\n    /* \"Solidity_Data_Types/Agreement.sol\":106:107  0 */\n  0x0\n    /* \"Solidity_Data_Types/Agreement.sol\":81:107  uint public nextToVote = 0 */\n  0x1\n  sstore\n    /* \"Solidity_Data_Types/Agreement.sol\":206:275  constructor(address[] _owners) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Solidity_Data_Types/Agreement.sol\":206:275  constructor(address[] _owners) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  dup3\n  add\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Solidity_Data_Types/Agreement.sol\":262:269  _owners */\n  dup1\n    /* \"Solidity_Data_Types/Agreement.sol\":253:259  owners */\n  0x0\n    /* \"Solidity_Data_Types/Agreement.sol\":253:269  owners = _owners */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_4\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"Solidity_Data_Types/Agreement.sol\":206:275  constructor(address[] _owners) public {\r... */\n  pop\n    /* \"Solidity_Data_Types/Agreement.sol\":27:1054  contract Agreement {\r... */\n  jump(tag_6)\ntag_5:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_7\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_8:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup3\n  mload\n  dup3\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_8)\ntag_9:\ntag_7:\n  pop\n  swap1\n  pop\n  tag_10\n  swap2\n  swap1\n  jump\t// in(tag_11)\ntag_10:\n  pop\n  swap1\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup2\n  dup2\n  0x100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity_Data_Types/Agreement.sol\":27:1054  contract Agreement {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x25e7c27\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5766b1a5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x632a9a52\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x753ec103\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc0e62070\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      stop\n        /* \"Solidity_Data_Types/Agreement.sol\":53:76  address[] public owners */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"Solidity_Data_Types/Agreement.sol\":53:76  address[] public owners */\n      pop\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity_Data_Types/Agreement.sol\":522:705  function propose(uint value, address addr) public canPropose {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"Solidity_Data_Types/Agreement.sol\":522:705  function propose(uint value, address addr) public canPropose {\r... */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      stop\n        /* \"Solidity_Data_Types/Agreement.sol\":713:1049  function vote() public {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"Solidity_Data_Types/Agreement.sol\":713:1049  function vote() public {\r... */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"Solidity_Data_Types/Agreement.sol\":283:307  Proposer public proposal */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"Solidity_Data_Types/Agreement.sol\":283:307  Proposer public proposal */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity_Data_Types/Agreement.sol\":81:107  uint public nextToVote = 0 */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"Solidity_Data_Types/Agreement.sol\":81:107  uint public nextToVote = 0 */\n      pop\n      tag_22\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity_Data_Types/Agreement.sol\":53:76  address[] public owners */\n    tag_11:\n      0x0\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity_Data_Types/Agreement.sol\":522:705  function propose(uint value, address addr) public canPropose {\r... */\n    tag_14:\n        /* \"Solidity_Data_Types/Agreement.sol\":353:363  uint index */\n      0x0\n        /* \"Solidity_Data_Types/Agreement.sol\":366:367  0 */\n      dup1\n        /* \"Solidity_Data_Types/Agreement.sol\":353:367  uint index = 0 */\n      swap1\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":349:471  for(uint index = 0; index < owners.length; index++) {\r... */\n    tag_27:\n        /* \"Solidity_Data_Types/Agreement.sol\":377:383  owners */\n      0x0\n        /* \"Solidity_Data_Types/Agreement.sol\":377:390  owners.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":369:374  index */\n      dup2\n        /* \"Solidity_Data_Types/Agreement.sol\":369:390  index < owners.length */\n      lt\n        /* \"Solidity_Data_Types/Agreement.sol\":349:471  for(uint index = 0; index < owners.length; index++) {\r... */\n      iszero\n      tag_28\n      jumpi\n        /* \"Solidity_Data_Types/Agreement.sol\":427:437  msg.sender */\n      caller\n        /* \"Solidity_Data_Types/Agreement.sol\":410:437  owners[index] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/Agreement.sol\":410:416  owners */\n      0x0\n        /* \"Solidity_Data_Types/Agreement.sol\":417:422  index */\n      dup3\n        /* \"Solidity_Data_Types/Agreement.sol\":410:423  owners[index] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/Agreement.sol\":410:437  owners[index] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Solidity_Data_Types/Agreement.sol\":407:466  if(owners[index] == msg.sender) {\r... */\n      iszero\n      tag_32\n      jumpi\n        /* \"Solidity_Data_Types/Agreement.sol\":625:634  5 minutes */\n      0x12c\n        /* \"Solidity_Data_Types/Agreement.sol\":604:612  proposal */\n      0x2\n        /* \"Solidity_Data_Types/Agreement.sol\":604:622  proposal.timestamp */\n      dup1\n      add\n      sload\n        /* \"Solidity_Data_Types/Agreement.sol\":604:634  proposal.timestamp + 5 minutes */\n      add\n        /* \"Solidity_Data_Types/Agreement.sol\":598:601  now */\n      timestamp\n        /* \"Solidity_Data_Types/Agreement.sol\":598:634  now > proposal.timestamp + 5 minutes */\n      gt\n        /* \"Solidity_Data_Types/Agreement.sol\":590:635  require(now > proposal.timestamp + 5 minutes) */\n      iszero\n      iszero\n      tag_34\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_34:\n        /* \"Solidity_Data_Types/Agreement.sol\":655:681  Proposer(value, addr, now) */\n      0x60\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity_Data_Types/Agreement.sol\":664:669  value */\n      dup5\n        /* \"Solidity_Data_Types/Agreement.sol\":655:681  Proposer(value, addr, now) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity_Data_Types/Agreement.sol\":671:675  addr */\n      dup4\n        /* \"Solidity_Data_Types/Agreement.sol\":655:681  Proposer(value, addr, now) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity_Data_Types/Agreement.sol\":677:680  now */\n      timestamp\n        /* \"Solidity_Data_Types/Agreement.sol\":655:681  Proposer(value, addr, now) */\n      dup2\n      mstore\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":644:652  proposal */\n      0x2\n        /* \"Solidity_Data_Types/Agreement.sol\":644:681  proposal = Proposer(value, addr, now) */\n      0x0\n      dup3\n      add\n      mload\n      dup2\n      0x0\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x1\n      add\n      exp(0x100, 0x0)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x2\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":699:700  0 */\n      0x0\n        /* \"Solidity_Data_Types/Agreement.sol\":686:696  nextToVote */\n      0x1\n        /* \"Solidity_Data_Types/Agreement.sol\":686:700  nextToVote = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":454:459  break */\n      jump(tag_28)\n        /* \"Solidity_Data_Types/Agreement.sol\":407:466  if(owners[index] == msg.sender) {\r... */\n    tag_32:\n        /* \"Solidity_Data_Types/Agreement.sol\":392:399  index++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":349:471  for(uint index = 0; index < owners.length; index++) {\r... */\n      jump(tag_27)\n    tag_28:\n        /* \"Solidity_Data_Types/Agreement.sol\":522:705  function propose(uint value, address addr) public canPropose {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Solidity_Data_Types/Agreement.sol\":713:1049  function vote() public {\r... */\n    tag_17:\n        /* \"Solidity_Data_Types/Agreement.sol\":765:771  owners */\n      0x0\n        /* \"Solidity_Data_Types/Agreement.sol\":765:778  owners.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":752:762  nextToVote */\n      sload(0x1)\n        /* \"Solidity_Data_Types/Agreement.sol\":752:778  nextToVote < owners.length */\n      lt\n        /* \"Solidity_Data_Types/Agreement.sol\":744:779  require(nextToVote < owners.length) */\n      iszero\n      iszero\n      tag_36\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_36:\n        /* \"Solidity_Data_Types/Agreement.sol\":814:824  msg.sender */\n      caller\n        /* \"Solidity_Data_Types/Agreement.sol\":792:824  owners[nextToVote] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/Agreement.sol\":792:798  owners */\n      0x0\n        /* \"Solidity_Data_Types/Agreement.sol\":799:809  nextToVote */\n      sload(0x1)\n        /* \"Solidity_Data_Types/Agreement.sol\":792:810  owners[nextToVote] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/Agreement.sol\":792:824  owners[nextToVote] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Solidity_Data_Types/Agreement.sol\":784:825  require(owners[nextToVote] == msg.sender) */\n      iszero\n      iszero\n      tag_39\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_39:\n        /* \"Solidity_Data_Types/Agreement.sol\":866:875  5 minutes */\n      0x12c\n        /* \"Solidity_Data_Types/Agreement.sol\":845:853  proposal */\n      0x2\n        /* \"Solidity_Data_Types/Agreement.sol\":845:863  proposal.timestamp */\n      dup1\n      add\n      sload\n        /* \"Solidity_Data_Types/Agreement.sol\":845:875  proposal.timestamp + 5 minutes */\n      add\n        /* \"Solidity_Data_Types/Agreement.sol\":838:841  now */\n      timestamp\n        /* \"Solidity_Data_Types/Agreement.sol\":838:875  now <= proposal.timestamp + 5 minutes */\n      gt\n      iszero\n        /* \"Solidity_Data_Types/Agreement.sol\":830:876  require(now <= proposal.timestamp + 5 minutes) */\n      iszero\n      iszero\n      tag_40\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_40:\n        /* \"Solidity_Data_Types/Agreement.sol\":914:922  proposal */\n      0x2\n        /* \"Solidity_Data_Types/Agreement.sol\":914:928  proposal.value */\n      0x0\n      add\n      sload\n        /* \"Solidity_Data_Types/Agreement.sol\":897:901  this */\n      address\n        /* \"Solidity_Data_Types/Agreement.sol\":889:910  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Solidity_Data_Types/Agreement.sol\":889:928  address(this).balance >= proposal.value */\n      lt\n      iszero\n        /* \"Solidity_Data_Types/Agreement.sol\":881:929  require(address(this).balance >= proposal.value) */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_41:\n        /* \"Solidity_Data_Types/Agreement.sol\":938:948  nextToVote */\n      0x1\n      0x0\n        /* \"Solidity_Data_Types/Agreement.sol\":938:950  nextToVote++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":976:982  owners */\n      0x0\n        /* \"Solidity_Data_Types/Agreement.sol\":976:989  owners.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":962:972  nextToVote */\n      sload(0x1)\n        /* \"Solidity_Data_Types/Agreement.sol\":962:989  nextToVote >= owners.length */\n      lt\n      iszero\n        /* \"Solidity_Data_Types/Agreement.sol\":959:1041  if(nextToVote >= owners.length) {\r... */\n      iszero\n      tag_42\n      jumpi\n        /* \"Solidity_Data_Types/Agreement.sol\":997:1005  proposal */\n      0x2\n        /* \"Solidity_Data_Types/Agreement.sol\":997:1010  proposal.addr */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/Agreement.sol\":997:1019  proposal.addr.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/Agreement.sol\":997:1035  proposal.addr.transfer(proposal.value) */\n      0x8fc\n        /* \"Solidity_Data_Types/Agreement.sol\":1020:1028  proposal */\n      0x2\n        /* \"Solidity_Data_Types/Agreement.sol\":1020:1034  proposal.value */\n      0x0\n      add\n      sload\n        /* \"Solidity_Data_Types/Agreement.sol\":997:1035  proposal.addr.transfer(proposal.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"Solidity_Data_Types/Agreement.sol\":997:1035  proposal.addr.transfer(proposal.value) */\n      pop\n        /* \"Solidity_Data_Types/Agreement.sol\":959:1041  if(nextToVote >= owners.length) {\r... */\n    tag_42:\n        /* \"Solidity_Data_Types/Agreement.sol\":713:1049  function vote() public {\r... */\n      jump\t// out\n        /* \"Solidity_Data_Types/Agreement.sol\":283:307  Proposer public proposal */\n    tag_20:\n      0x2\n      dup1\n      0x0\n      add\n      sload\n      swap1\n      dup1\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x2\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Solidity_Data_Types/Agreement.sol\":81:107  uint public nextToVote = 0 */\n    tag_23:\n      sload(0x1)\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058209a6fa958a990ca75e5d57b1f054af6f464d745ec353cdb65b429adfa0447fb260029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600060015534801561001557600080fd5b5060405161065238038061065283398101806040528101908080518201929190505050806000908051906020019061004e929190610055565b5050610122565b8280548282559060005260206000209081019282156100ce579160200282015b828111156100cd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610075565b5b5090506100db91906100df565b5090565b61011f91905b8082111561011b57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016100e5565b5090565b90565b610521806101316000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025e7c271461006f5780635766b1a5146100dc578063632a9a5214610129578063753ec10314610140578063c0e62070146101a5575b005b34801561007b57600080fd5b5061009a600480360381019080803590602001909291905050506101d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e857600080fd5b5061012760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020e565b005b34801561013557600080fd5b5061013e610355565b005b34801561014c57600080fd5b506101556104b7565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b3480156101b157600080fd5b506101ba6104ef565b6040518082815260200191505060405180910390f35b6000818154811015156101df57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008090505b600080549050811015610350573373ffffffffffffffffffffffffffffffffffffffff1660008281548110151561024757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103435761012c600280015401421115156102a457600080fd5b6060604051908101604052808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020014281525060026000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506000600181905550610350565b8080600101915050610214565b505050565b60008054905060015410151561036a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600060015481548110151561039257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156103df57600080fd5b61012c60028001540142111515156103f657600080fd5b6002600001543073ffffffffffffffffffffffffffffffffffffffff16311015151561042157600080fd5b6001600081548092919060010191905055506000805490506001541015156104b557600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002600001549081150290604051600060405180830381858888f193505050501580156104b3573d6000803e3d6000fd5b505b565b60028060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b600154815600a165627a7a723058209a6fa958a990ca75e5d57b1f054af6f464d745ec353cdb65b429adfa0447fb260029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x652 CODESIZE SUB DUP1 PUSH2 0x652 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD DUP3 ADD SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x4E SWAP3 SWAP2 SWAP1 PUSH2 0x55 JUMP JUMPDEST POP POP PUSH2 0x122 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xCE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xCD JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x11F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP2 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xE5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x521 DUP1 PUSH2 0x131 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x5766B1A5 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x753EC103 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xC0E62070 EQ PUSH2 0x1A5 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x355 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1DF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x350 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x247 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x343 JUMPI PUSH2 0x12C PUSH1 0x2 DUP1 ADD SLOAD ADD TIMESTAMP GT ISZERO ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x350 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x214 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 SLOAD LT ISZERO ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x392 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C PUSH1 0x2 DUP1 ADD SLOAD ADD TIMESTAMP GT ISZERO ISZERO ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 SLOAD LT ISZERO ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 PUSH1 0x0 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP11 PUSH16 0xA958A990CA75E5D57B1F054AF6F464D7 GASLIMIT 0xec CALLDATALOAD EXTCODECOPY 0xdb PUSH6 0xB429ADFA0447 CREATE2 0x26 STOP 0x29 ",
							"sourceMap": "27:1027:0:-;;;106:1;81:26;;206:69;8:9:-1;5:2;;;30:1;27;20:12;5:2;206:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:7;253:6;:16;;;;;;;;;;;;:::i;:::-;;206:69;27:1027;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025e7c271461006f5780635766b1a5146100dc578063632a9a5214610129578063753ec10314610140578063c0e62070146101a5575b005b34801561007b57600080fd5b5061009a600480360381019080803590602001909291905050506101d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e857600080fd5b5061012760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020e565b005b34801561013557600080fd5b5061013e610355565b005b34801561014c57600080fd5b506101556104b7565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b3480156101b157600080fd5b506101ba6104ef565b6040518082815260200191505060405180910390f35b6000818154811015156101df57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008090505b600080549050811015610350573373ffffffffffffffffffffffffffffffffffffffff1660008281548110151561024757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103435761012c600280015401421115156102a457600080fd5b6060604051908101604052808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020014281525060026000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050506000600181905550610350565b8080600101915050610214565b505050565b60008054905060015410151561036a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600060015481548110151561039257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156103df57600080fd5b61012c60028001540142111515156103f657600080fd5b6002600001543073ffffffffffffffffffffffffffffffffffffffff16311015151561042157600080fd5b6001600081548092919060010191905055506000805490506001541015156104b557600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002600001549081150290604051600060405180830381858888f193505050501580156104b3573d6000803e3d6000fd5b505b565b60028060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b600154815600a165627a7a723058209a6fa958a990ca75e5d57b1f054af6f464d745ec353cdb65b429adfa0447fb260029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x5766B1A5 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x753EC103 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xC0E62070 EQ PUSH2 0x1A5 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x355 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1DF JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x350 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x247 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x343 JUMPI PUSH2 0x12C PUSH1 0x2 DUP1 ADD SLOAD ADD TIMESTAMP GT ISZERO ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x350 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x214 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 SLOAD LT ISZERO ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x392 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C PUSH1 0x2 DUP1 ADD SLOAD ADD TIMESTAMP GT ISZERO ISZERO ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 SLOAD LT ISZERO ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 PUSH1 0x0 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP11 PUSH16 0xA958A990CA75E5D57B1F054AF6F464D7 GASLIMIT 0xec CALLDATALOAD EXTCODECOPY 0xdb PUSH6 0xB429ADFA0447 CREATE2 0x26 STOP 0x29 ",
							"sourceMap": "27:1027:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;522:183:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;713:336;;8:9:-1;5:2;;;30:1;27;20:12;5:2;713:336:0;;;;;;283:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:26:0;;;;;;;;;;;;;;;;;;;;;;;53:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;522:183::-;353:10;366:1;353:14;;349:122;377:6;:13;;;;369:5;:21;349:122;;;427:10;410:27;;:6;417:5;410:13;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;407:59;;;625:9;604:8;:18;;;:30;598:3;:36;590:45;;;;;;;;655:26;;;;;;;;;664:5;655:26;;;;671:4;655:26;;;;;;677:3;655:26;;;644:8;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;699:1;686:10;:14;;;;454:5;;407:59;392:7;;;;;;;349:122;;;522:183;;;:::o;713:336::-;765:6;:13;;;;752:10;;:26;744:35;;;;;;;;814:10;792:32;;:6;799:10;;792:18;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;784:41;;;;;;;;866:9;845:8;:18;;;:30;838:3;:37;;830:46;;;;;;;;914:8;:14;;;897:4;889:21;;;:39;;881:48;;;;;;;;938:10;;:12;;;;;;;;;;;;;976:6;:13;;;;962:10;;:27;;959:82;;;997:8;:13;;;;;;;;;;;;:22;;:38;1020:8;:14;;;997:38;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;997:38:0;959:82;713:336::o;283:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;81:26::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "262600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "173",
								"nextToVote()": "482",
								"owners(uint256)": "786",
								"proposal()": "986",
								"propose(uint256,address)": "infinite",
								"vote()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "MSTORE"
								},
								{
									"begin": 106,
									"end": 107,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 81,
									"end": 107,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 81,
									"end": 107,
									"name": "SSTORE"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "POP"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "MLOAD"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "PUSHSIZE"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "CODESIZE"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "SUB"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "DUP1"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "PUSHSIZE"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "DUP4"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "CODECOPY"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "DUP2"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "ADD"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "DUP1"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "MSTORE"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "DUP2"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "ADD"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "SWAP1"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "DUP1"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "DUP1"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "MLOAD"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "DUP3"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "ADD"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "SWAP3"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "SWAP2"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "SWAP1"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "POP"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "POP"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "POP"
								},
								{
									"begin": 262,
									"end": 269,
									"name": "DUP1"
								},
								{
									"begin": 253,
									"end": 259,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "DUP1"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "MLOAD"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "ADD"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "SWAP3"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "SWAP2"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "JUMPDEST"
								},
								{
									"begin": 253,
									"end": 269,
									"name": "POP"
								},
								{
									"begin": 206,
									"end": 275,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SLOAD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SSTORE"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "MSTORE"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "KECCAK256"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "ISZERO"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPI"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "MUL"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "GT"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "ISZERO"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPI"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "MLOAD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "EXP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SLOAD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "MUL"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "NOT"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "AND"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP4"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "AND"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "MUL"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "OR"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SSTORE"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP3"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "GT"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "ISZERO"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPI"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "EXP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SLOAD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "MUL"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "NOT"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "AND"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SSTORE"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "ADD"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMP"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "SWAP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1054,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058209a6fa958a990ca75e5d57b1f054af6f464d745ec353cdb65b429adfa0447fb260029",
									".code": [
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "SWAP1"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "DIV"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "AND"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "25E7C27"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "5766B1A5"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "632A9A52"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "753EC103"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH",
											"value": "C0E62070"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1054,
											"name": "STOP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPDEST"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "POP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SUB"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "ADD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "ADD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP3"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "POP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "POP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "POP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPDEST"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "MLOAD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP3"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "AND"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "AND"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "MSTORE"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "ADD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "POP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "POP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "MLOAD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SUB"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "RETURN"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SUB"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP3"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP2"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "AND"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP3"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP2"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "JUMP"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "STOP"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "POP"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "JUMP"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "STOP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "JUMP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "MLOAD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP5"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP4"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "AND"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "AND"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP3"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP2"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "MSTORE"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP4"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "MLOAD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP2"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SUB"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "RETURN"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "JUMP"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "MLOAD"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "DUP3"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "MSTORE"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "ADD"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "POP"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "MLOAD"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "DUP1"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "SWAP2"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "SUB"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "RETURN"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPDEST"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SLOAD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "LT"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "ISZERO"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "ISZERO"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPI"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "INVALID"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPDEST"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "MSTORE"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "KECCAK256"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "ADD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "POP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SLOAD"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "EXP"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DIV"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "AND"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP2"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "JUMPDEST"
										},
										{
											"begin": 353,
											"end": 363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 366,
											"end": 367,
											"name": "DUP1"
										},
										{
											"begin": 353,
											"end": 367,
											"name": "SWAP1"
										},
										{
											"begin": 353,
											"end": 367,
											"name": "POP"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 377,
											"end": 383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 377,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 377,
											"end": 390,
											"name": "SLOAD"
										},
										{
											"begin": 377,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 377,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 374,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 390,
											"name": "LT"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "JUMPI"
										},
										{
											"begin": 427,
											"end": 437,
											"name": "CALLER"
										},
										{
											"begin": 410,
											"end": 437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 437,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "DUP3"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "SLOAD"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "LT"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "ISZERO"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "ISZERO"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "JUMPI"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "INVALID"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "MSTORE"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "KECCAK256"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "ADD"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "SLOAD"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "EXP"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "DIV"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 423,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 437,
											"name": "AND"
										},
										{
											"begin": 410,
											"end": 437,
											"name": "EQ"
										},
										{
											"begin": 407,
											"end": 466,
											"name": "ISZERO"
										},
										{
											"begin": 407,
											"end": 466,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 407,
											"end": 466,
											"name": "JUMPI"
										},
										{
											"begin": 625,
											"end": 634,
											"name": "PUSH",
											"value": "12C"
										},
										{
											"begin": 604,
											"end": 612,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP1"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "SLOAD"
										},
										{
											"begin": 604,
											"end": 634,
											"name": "ADD"
										},
										{
											"begin": 598,
											"end": 601,
											"name": "TIMESTAMP"
										},
										{
											"begin": 598,
											"end": 634,
											"name": "GT"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "ISZERO"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "JUMPI"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "REVERT"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 590,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MLOAD"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 669,
											"name": "DUP5"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 671,
											"end": 675,
											"name": "DUP4"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 680,
											"name": "TIMESTAMP"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 652,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "SSTORE"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "EXP"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "SLOAD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "MUL"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "NOT"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP4"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "MUL"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "OR"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "SSTORE"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP3"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "MLOAD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "SSTORE"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "POP"
										},
										{
											"begin": 644,
											"end": 681,
											"name": "POP"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 686,
											"end": 696,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 686,
											"end": 700,
											"name": "DUP2"
										},
										{
											"begin": 686,
											"end": 700,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 700,
											"name": "SSTORE"
										},
										{
											"begin": 686,
											"end": 700,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 459,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 454,
											"end": 459,
											"name": "JUMP"
										},
										{
											"begin": 407,
											"end": 466,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 407,
											"end": 466,
											"name": "JUMPDEST"
										},
										{
											"begin": 392,
											"end": 399,
											"name": "DUP1"
										},
										{
											"begin": 392,
											"end": 399,
											"name": "DUP1"
										},
										{
											"begin": 392,
											"end": 399,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 392,
											"end": 399,
											"name": "ADD"
										},
										{
											"begin": 392,
											"end": 399,
											"name": "SWAP2"
										},
										{
											"begin": 392,
											"end": 399,
											"name": "POP"
										},
										{
											"begin": 392,
											"end": 399,
											"name": "POP"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "JUMP"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 349,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 705,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 765,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 765,
											"end": 778,
											"name": "SLOAD"
										},
										{
											"begin": 765,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "SLOAD"
										},
										{
											"begin": 752,
											"end": 778,
											"name": "LT"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "ISZERO"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "ISZERO"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "JUMPI"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "DUP1"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "REVERT"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 744,
											"end": 779,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 824,
											"name": "CALLER"
										},
										{
											"begin": 792,
											"end": 824,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 824,
											"name": "AND"
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 799,
											"end": 809,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 799,
											"end": 809,
											"name": "SLOAD"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "DUP2"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "SLOAD"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "DUP2"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "LT"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "ISZERO"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "ISZERO"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "JUMPI"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "INVALID"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "JUMPDEST"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "SWAP1"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "MSTORE"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "KECCAK256"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "ADD"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "SWAP1"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "SLOAD"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "SWAP1"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "EXP"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "SWAP1"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "DIV"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "AND"
										},
										{
											"begin": 792,
											"end": 824,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 824,
											"name": "AND"
										},
										{
											"begin": 792,
											"end": 824,
											"name": "EQ"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "ISZERO"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "ISZERO"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPI"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "DUP1"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "REVERT"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 784,
											"end": 825,
											"name": "JUMPDEST"
										},
										{
											"begin": 866,
											"end": 875,
											"name": "PUSH",
											"value": "12C"
										},
										{
											"begin": 845,
											"end": 853,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "DUP1"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "ADD"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "SLOAD"
										},
										{
											"begin": 845,
											"end": 875,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 841,
											"name": "TIMESTAMP"
										},
										{
											"begin": 838,
											"end": 875,
											"name": "GT"
										},
										{
											"begin": 838,
											"end": 875,
											"name": "ISZERO"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "ISZERO"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "ISZERO"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "JUMPI"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "DUP1"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "REVERT"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 830,
											"end": 876,
											"name": "JUMPDEST"
										},
										{
											"begin": 914,
											"end": 922,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 914,
											"end": 928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 914,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 914,
											"end": 928,
											"name": "SLOAD"
										},
										{
											"begin": 897,
											"end": 901,
											"name": "ADDRESS"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "AND"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "BALANCE"
										},
										{
											"begin": 889,
											"end": 928,
											"name": "LT"
										},
										{
											"begin": 889,
											"end": 928,
											"name": "ISZERO"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "ISZERO"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "ISZERO"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "JUMPI"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "DUP1"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "REVERT"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 881,
											"end": 929,
											"name": "JUMPDEST"
										},
										{
											"begin": 938,
											"end": 948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 938,
											"end": 948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "SLOAD"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "SWAP3"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "SSTORE"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "SLOAD"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "POP"
										},
										{
											"begin": 962,
											"end": 972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 962,
											"end": 972,
											"name": "SLOAD"
										},
										{
											"begin": 962,
											"end": 989,
											"name": "LT"
										},
										{
											"begin": 962,
											"end": 989,
											"name": "ISZERO"
										},
										{
											"begin": 959,
											"end": 1041,
											"name": "ISZERO"
										},
										{
											"begin": 959,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 959,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 997,
											"end": 1005,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "ADD"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "SLOAD"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "EXP"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "DIV"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "AND"
										},
										{
											"begin": 997,
											"end": 1019,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1019,
											"name": "AND"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1020,
											"end": 1028,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1020,
											"end": 1034,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1034,
											"name": "ADD"
										},
										{
											"begin": 1020,
											"end": 1034,
											"name": "SLOAD"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "DUP2"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "ISZERO"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "MUL"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "MLOAD"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "MLOAD"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "DUP4"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "SUB"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "DUP2"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "DUP6"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "DUP9"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "DUP9"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "CALL"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "SWAP4"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "POP"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "POP"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "POP"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "POP"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 997,
											"end": 1035,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1041,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 959,
											"end": 1041,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 1049,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SLOAD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SLOAD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "EXP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DIV"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "AND"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SLOAD"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "DUP4"
										},
										{
											"begin": 283,
											"end": 307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "SLOAD"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "DUP2"
										},
										{
											"begin": 81,
											"end": 107,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"nextToVote()": "c0e62070",
							"owners(uint256)": "025e7c27",
							"proposal()": "753ec103",
							"propose(uint256,address)": "5766b1a5",
							"vote()": "632a9a52"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"propose\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposal\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextToVote\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Solidity_Data_Types/Agreement.sol\":\"Agreement\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Solidity_Data_Types/Agreement.sol\":{\"keccak256\":\"0x93dff6dbd640553efc6b65069381b1cdbfbbf5f99b3423b7ad76543fa07f10a2\",\"urls\":[\"bzzr://62a800b80ef9d1f9eb7afb3f2c28e6f14475b2f5ae26114aa5c13831bccc64e1\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Solidity_Data_Types/Agreement.sol": {
				"ast": {
					"absolutePath": "Solidity_Data_Types/Agreement.sol",
					"exportedSymbols": {
						"Agreement": [
							146
						]
					},
					"id": 147,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "Agreement",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"name": "owners",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "53:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "53:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 3,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "53:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "nextToVote",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "81:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "81:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "106:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Agreement.Proposer",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 9,
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "144:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "144:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"name": "addr",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "161:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "161:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "180:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 12,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "180:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposer",
									"nodeType": "StructDefinition",
									"scope": 146,
									"src": "114:86:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "244:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "253:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "253:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "253:16:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "_owners",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "218:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 15,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "218:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 16,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "218:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "217:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:0:0"
									},
									"scope": 146,
									"src": "206:69:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"name": "proposal",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "283:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Proposer_$14_storage",
										"typeString": "struct Agreement.Proposer"
									},
									"typeName": {
										"contractScope": null,
										"id": 26,
										"name": "Proposer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 14,
										"src": "283:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Proposer_$14_storage_ptr",
											"typeString": "struct Agreement.Proposer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "340:136:0",
										"statements": [
											{
												"body": {
													"id": 50,
													"nodeType": "Block",
													"src": "401:70:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 40,
																		"name": "owners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "410:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 42,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 41,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "417:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "410:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 43,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "427:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "427:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "410:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 49,
															"nodeType": "IfStatement",
															"src": "407:59:0",
															"trueBody": {
																"id": 48,
																"nodeType": "Block",
																"src": "439:27:0",
																"statements": [
																	{
																		"id": 46,
																		"nodeType": "PlaceholderStatement",
																		"src": "446:1:0"
																	},
																	{
																		"id": 47,
																		"nodeType": "Break",
																		"src": "454:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 33,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "369:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 34,
															"name": "owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "377:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "377:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "369:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"initializationExpression": {
													"assignments": [
														30
													],
													"declarations": [
														{
															"constant": false,
															"id": 30,
															"name": "index",
															"nodeType": "VariableDeclaration",
															"scope": 53,
															"src": "353:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 29,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "353:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 32,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "366:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "353:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "392:7:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 37,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "392:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"nodeType": "ExpressionStatement",
													"src": "392:7:0"
												},
												"nodeType": "ForStatement",
												"src": "349:122:0"
											}
										]
									},
									"documentation": null,
									"id": 53,
									"name": "canPropose",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:0"
									},
									"src": "320:156:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "510:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 57,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "492:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:0"
									},
									"scope": 146,
									"src": "484:28:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "583:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 67,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "598:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 68,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "604:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposer_$14_storage",
																			"typeString": "struct Agreement.Proposer storage ref"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 13,
																	"src": "604:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "35",
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "625:9:0",
																	"subdenomination": "minutes",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "5"
																},
																"src": "604:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "598:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															164,
															165
														],
														"referencedDeclaration": 164,
														"src": "590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "590:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "590:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "644:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposer_$14_storage",
															"typeString": "struct Agreement.Proposer storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 77,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 78,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "671:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 79,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "677:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 76,
															"name": "Proposer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "655:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Proposer_$14_storage_ptr_$",
																"typeString": "type(struct Agreement.Proposer storage pointer)"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "655:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposer_$14_memory",
															"typeString": "struct Agreement.Proposer memory"
														}
													},
													"src": "644:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposer_$14_storage",
														"typeString": "struct Agreement.Proposer storage ref"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "644:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 83,
														"name": "nextToVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "686:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "699:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "686:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "686:14:0"
											}
										]
									},
									"documentation": null,
									"id": 88,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 64,
											"modifierName": {
												"argumentTypes": null,
												"id": 63,
												"name": "canPropose",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 53,
												"src": "572:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "572:10:0"
										}
									],
									"name": "propose",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "539:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:0"
									},
									"scope": 146,
									"src": "522:183:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "736:313:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 92,
																"name": "nextToVote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 93,
																	"name": "owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "765:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "765:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "752:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															164,
															165
														],
														"referencedDeclaration": 164,
														"src": "744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "744:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 99,
																	"name": "owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "792:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 101,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 100,
																	"name": "nextToVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "799:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "792:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 102,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "814:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "792:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															164,
															165
														],
														"referencedDeclaration": 164,
														"src": "784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "784:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "784:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "838:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 109,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "845:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposer_$14_storage",
																			"typeString": "struct Agreement.Proposer storage ref"
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 13,
																	"src": "845:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "35",
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "866:9:0",
																	"subdenomination": "minutes",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "5"
																},
																"src": "845:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "838:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															164,
															165
														],
														"referencedDeclaration": 164,
														"src": "830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "830:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "830:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 118,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 174,
																			"src": "897:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Agreement_$146",
																				"typeString": "contract Agreement"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Agreement_$146",
																				"typeString": "contract Agreement"
																			}
																		],
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "889:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "889:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "914:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposer_$14_storage",
																		"typeString": "struct Agreement.Proposer storage ref"
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 9,
																"src": "914:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "889:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															164,
															165
														],
														"referencedDeclaration": 164,
														"src": "881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "881:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "938:12:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "nextToVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "938:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "938:12:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "nextToVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "962:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 130,
															"name": "owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "976:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "962:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 143,
												"nodeType": "IfStatement",
												"src": "959:82:0",
												"trueBody": {
													"id": 142,
													"nodeType": "Block",
													"src": "991:50:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 138,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "1020:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposer_$14_storage",
																				"typeString": "struct Agreement.Proposer storage ref"
																			}
																		},
																		"id": 139,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "1020:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 133,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "997:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposer_$14_storage",
																				"typeString": "struct Agreement.Proposer storage ref"
																			}
																		},
																		"id": 136,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 11,
																		"src": "997:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "997:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "997:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 141,
															"nodeType": "ExpressionStatement",
															"src": "997:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 145,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:0"
									},
									"scope": 146,
									"src": "713:336:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 147,
							"src": "27:1027:0"
						}
					],
					"src": "0:1054:0"
				},
				"id": 0
			}
		}
	}
}