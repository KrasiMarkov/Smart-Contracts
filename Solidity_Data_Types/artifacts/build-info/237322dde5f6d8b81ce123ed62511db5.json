{
	"id": "237322dde5f6d8b81ce123ed62511db5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity_Data_Types/State.sol": {
				"content": "pragma solidity 0.4.24;\r\n\r\ncontract StateFull {\r\n\r\n    enum State { Locked, Unlocked, Restricted }\r\n\r\n    struct Counter {\r\n\r\n        uint256 counter;\r\n        uint256 timestamp;\r\n        address addr;\r\n    }\r\n\r\n    address owner;\r\n    Counter public counter;\r\n    State public state;\r\n\r\n\r\n    constructor() public {\r\n \r\n       owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n       \r\n       require(msg.sender == owner);\r\n       _;\r\n    }\r\n\r\n    modifier canExecute {\r\n\r\n       require(state != State.Locked);\r\n\t   require( (state == State.Unlocked) || ((state == State.Restricted) && (msg.sender == owner)));\r\n\t\t_;\r\n    }\r\n\r\n\r\n    function changeState(State _state) public onlyOwner {\r\n\r\n        state = _state;\r\n    }\r\n\r\n    function increments() public canExecute {\r\n\r\n        counter.counter++;\r\n        counter.timestamp = now;\r\n        counter.addr = msg.sender;\r\n\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Solidity_Data_Types/State.sol": {
				"StateFull": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_state",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "increments",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "counter",
							"outputs": [
								{
									"name": "counter",
									"type": "uint256"
								},
								{
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"name": "addr",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Solidity_Data_Types/State.sol\":27:891  contract StateFull {\r... */\n  mstore(0x40, 0x80)\n    /* \"Solidity_Data_Types/State.sol\":294:354  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Solidity_Data_Types/State.sol\":294:354  constructor() public {\r... */\n  pop\n    /* \"Solidity_Data_Types/State.sol\":336:346  msg.sender */\n  caller\n    /* \"Solidity_Data_Types/State.sol\":328:333  owner */\n  0x0\n  dup1\n    /* \"Solidity_Data_Types/State.sol\":328:346  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity_Data_Types/State.sol\":27:891  contract StateFull {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity_Data_Types/State.sol\":27:891  contract StateFull {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x268f1153\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x56aa2dc5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x61bc221a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Solidity_Data_Types/State.sol\":641:728  function changeState(State _state) public onlyOwner {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"Solidity_Data_Types/State.sol\":641:728  function changeState(State _state) public onlyOwner {\r... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"Solidity_Data_Types/State.sol\":736:886  function increments() public canExecute {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"Solidity_Data_Types/State.sol\":736:886  function increments() public canExecute {\r... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"Solidity_Data_Types/State.sol\":236:258  Counter public counter */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"Solidity_Data_Types/State.sol\":236:258  Counter public counter */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity_Data_Types/State.sol\":265:283  State public state */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"Solidity_Data_Types/State.sol\":265:283  State public state */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0x2\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity_Data_Types/State.sol\":641:728  function changeState(State _state) public onlyOwner {\r... */\n    tag_8:\n        /* \"Solidity_Data_Types/State.sol\":422:427  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/State.sol\":408:427  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/State.sol\":408:418  msg.sender */\n      caller\n        /* \"Solidity_Data_Types/State.sol\":408:427  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Solidity_Data_Types/State.sol\":400:428  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_20\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_20:\n        /* \"Solidity_Data_Types/State.sol\":714:720  _state */\n      dup1\n        /* \"Solidity_Data_Types/State.sol\":706:711  state */\n      0x4\n      0x0\n        /* \"Solidity_Data_Types/State.sol\":706:720  state = _state */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x2\n      dup2\n      gt\n      iszero\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity_Data_Types/State.sol\":641:728  function changeState(State _state) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Solidity_Data_Types/State.sol\":736:886  function increments() public canExecute {\r... */\n    tag_11:\n        /* \"Solidity_Data_Types/State.sol\":504:516  State.Locked */\n      0x0\n        /* \"Solidity_Data_Types/State.sol\":495:516  state != State.Locked */\n      0x2\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n        /* \"Solidity_Data_Types/State.sol\":495:500  state */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity_Data_Types/State.sol\":495:516  state != State.Locked */\n      0x2\n      dup2\n      gt\n      iszero\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      eq\n      iszero\n        /* \"Solidity_Data_Types/State.sol\":487:517  require(state != State.Locked) */\n      iszero\n      iszero\n      tag_26\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_26:\n        /* \"Solidity_Data_Types/State.sol\":543:557  State.Unlocked */\n      0x1\n        /* \"Solidity_Data_Types/State.sol\":534:557  state == State.Unlocked */\n      0x2\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n        /* \"Solidity_Data_Types/State.sol\":534:539  state */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity_Data_Types/State.sol\":534:557  state == State.Unlocked */\n      0x2\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n      eq\n        /* \"Solidity_Data_Types/State.sol\":533:616  (state == State.Unlocked) || ((state == State.Restricted) && (msg.sender == owner)) */\n      dup1\n      tag_29\n      jumpi\n      pop\n        /* \"Solidity_Data_Types/State.sol\":573:589  State.Restricted */\n      0x2\n        /* \"Solidity_Data_Types/State.sol\":564:589  state == State.Restricted */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n        /* \"Solidity_Data_Types/State.sol\":564:569  state */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity_Data_Types/State.sol\":564:589  state == State.Restricted */\n      0x2\n      dup2\n      gt\n      iszero\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      eq\n        /* \"Solidity_Data_Types/State.sol\":563:615  (state == State.Restricted) && (msg.sender == owner) */\n      dup1\n      iszero\n      tag_32\n      jumpi\n      pop\n        /* \"Solidity_Data_Types/State.sol\":609:614  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/State.sol\":595:614  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Data_Types/State.sol\":595:605  msg.sender */\n      caller\n        /* \"Solidity_Data_Types/State.sol\":595:614  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Solidity_Data_Types/State.sol\":563:615  (state == State.Restricted) && (msg.sender == owner) */\n    tag_32:\n        /* \"Solidity_Data_Types/State.sol\":533:616  (state == State.Unlocked) || ((state == State.Restricted) && (msg.sender == owner)) */\n    tag_29:\n        /* \"Solidity_Data_Types/State.sol\":524:617  require( (state == State.Unlocked) || ((state == State.Restricted) && (msg.sender == owner))) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"Solidity_Data_Types/State.sol\":789:796  counter */\n      0x1\n        /* \"Solidity_Data_Types/State.sol\":789:804  counter.counter */\n      0x0\n      add\n      0x0\n        /* \"Solidity_Data_Types/State.sol\":789:806  counter.counter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Solidity_Data_Types/State.sol\":837:840  now */\n      timestamp\n        /* \"Solidity_Data_Types/State.sol\":817:824  counter */\n      0x1\n        /* \"Solidity_Data_Types/State.sol\":817:834  counter.timestamp */\n      dup1\n      add\n        /* \"Solidity_Data_Types/State.sol\":817:840  counter.timestamp = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity_Data_Types/State.sol\":866:876  msg.sender */\n      caller\n        /* \"Solidity_Data_Types/State.sol\":851:858  counter */\n      0x1\n        /* \"Solidity_Data_Types/State.sol\":851:863  counter.addr */\n      0x2\n      add\n      0x0\n        /* \"Solidity_Data_Types/State.sol\":851:876  counter.addr = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity_Data_Types/State.sol\":736:886  function increments() public canExecute {\r... */\n      jump\t// out\n        /* \"Solidity_Data_Types/State.sol\":236:258  Counter public counter */\n    tag_14:\n      0x1\n      dup1\n      0x0\n      add\n      sload\n      swap1\n      dup1\n      0x1\n      add\n      sload\n      swap1\n      dup1\n      0x2\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Solidity_Data_Types/State.sol\":265:283  State public state */\n    tag_17:\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820ecef04d023e964fb4df014c3e58f298b7877b20937fa78b520544f7ded1daaed0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610398806100606000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063268f11531461006757806356aa2dc51461009757806361bc221a146100ae578063c19d93fb14610113575b600080fd5b34801561007357600080fd5b50610095600480360381019080803560ff16906020019092919050505061014c565b005b3480156100a357600080fd5b506100ac6101cd565b005b3480156100ba57600080fd5b506100c3610321565b604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b34801561011f57600080fd5b50610128610359565b6040518082600281111561013857fe5b60ff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a757600080fd5b80600460006101000a81548160ff021916908360028111156101c557fe5b021790555050565b600060028111156101da57fe5b600460009054906101000a900460ff1660028111156101f557fe5b1415151561020257600080fd5b6001600281111561020f57fe5b600460009054906101000a900460ff16600281111561022a57fe5b14806102b2575060028081111561023d57fe5b600460009054906101000a900460ff16600281111561025857fe5b1480156102b157506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b15156102bd57600080fd5b60016000016000815480929190600101919050555042600180018190555033600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60018060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600460009054906101000a900460ff16815600a165627a7a72305820ecef04d023e964fb4df014c3e58f298b7877b20937fa78b520544f7ded1daaed0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x398 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x268F1153 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x56AA2DC5 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x1CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x138 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C5 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DA JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x20F JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22A JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x2B2 JUMPI POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x258 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x2B1 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST ISZERO ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP TIMESTAMP PUSH1 0x1 DUP1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xec 0xef DIV 0xd0 0x23 0xe9 PUSH5 0xFB4DF014C3 0xe5 DUP16 0x29 DUP12 PUSH25 0x77B20937FA78B520544F7DED1DAAED00290000000000000000 ",
							"sourceMap": "27:864:0:-;;;294:60;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:60:0;336:10;328:5;;:18;;;;;;;;;;;;;;;;;;27:864;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063268f11531461006757806356aa2dc51461009757806361bc221a146100ae578063c19d93fb14610113575b600080fd5b34801561007357600080fd5b50610095600480360381019080803560ff16906020019092919050505061014c565b005b3480156100a357600080fd5b506100ac6101cd565b005b3480156100ba57600080fd5b506100c3610321565b604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b34801561011f57600080fd5b50610128610359565b6040518082600281111561013857fe5b60ff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a757600080fd5b80600460006101000a81548160ff021916908360028111156101c557fe5b021790555050565b600060028111156101da57fe5b600460009054906101000a900460ff1660028111156101f557fe5b1415151561020257600080fd5b6001600281111561020f57fe5b600460009054906101000a900460ff16600281111561022a57fe5b14806102b2575060028081111561023d57fe5b600460009054906101000a900460ff16600281111561025857fe5b1480156102b157506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b15156102bd57600080fd5b60016000016000815480929190600101919050555042600180018190555033600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60018060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600460009054906101000a900460ff16815600a165627a7a72305820ecef04d023e964fb4df014c3e58f298b7877b20937fa78b520544f7ded1daaed0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x268F1153 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x56AA2DC5 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x1CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x138 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C5 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DA JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x20F JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22A JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x2B2 JUMPI POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x23D JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x258 JUMPI INVALID JUMPDEST EQ DUP1 ISZERO PUSH2 0x2B1 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST ISZERO ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP TIMESTAMP PUSH1 0x1 DUP1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xec 0xef DIV 0xd0 0x23 0xe9 PUSH5 0xFB4DF014C3 0xe5 DUP16 0x29 DUP12 PUSH25 0x77B20937FA78B520544F7DED1DAAED00290000000000000000 ",
							"sourceMap": "27:864:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;641:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;736:150:0;;;;;;236:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;236:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;265:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:87;422:5;;;;;;;;;;;408:19;;:10;:19;;;400:28;;;;;;;;714:6;706:5;;:14;;;;;;;;;;;;;;;;;;;;;;;;641:87;:::o;736:150::-;504:12;495:21;;;;;;;;:5;;;;;;;;;;;:21;;;;;;;;;;487:30;;;;;;;;543:14;534:23;;;;;;;;:5;;;;;;;;;;;:23;;;;;;;;;533:83;;;;573:16;564:25;;;;;;;;:5;;;;;;;;;;;:25;;;;;;;;;563:52;;;;;609:5;;;;;;;;;;;595:19;;:10;:19;;;563:52;533:83;524:93;;;;;;;;789:7;:15;;;:17;;;;;;;;;;;;;837:3;817:7;:17;;:23;;;;866:10;851:7;:12;;;:25;;;;;;;;;;;;;;;;;;736:150::o;236:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;265:18::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "184000",
								"executionCost": "20492",
								"totalCost": "204492"
							},
							"external": {
								"changeState(uint8)": "20760",
								"counter()": "964",
								"increments()": "61920",
								"state()": "528"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 891,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "MSTORE"
								},
								{
									"begin": 294,
									"end": 354,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 294,
									"end": 354,
									"name": "POP"
								},
								{
									"begin": 336,
									"end": 346,
									"name": "CALLER"
								},
								{
									"begin": 328,
									"end": 333,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 328,
									"end": 333,
									"name": "DUP1"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "EXP"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "DUP2"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "SLOAD"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "DUP2"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "MUL"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "NOT"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "AND"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "SWAP1"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "DUP4"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "AND"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "MUL"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "OR"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "SWAP1"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "SSTORE"
								},
								{
									"begin": 328,
									"end": 346,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 891,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820ecef04d023e964fb4df014c3e58f298b7877b20937fa78b520544f7ded1daaed0029",
									".code": [
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "DIV"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "268F1153"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "56AA2DC5"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "61BC221A"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "C19D93FB"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 891,
											"name": "REVERT"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "SUB"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "DUP2"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "ADD"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "AND"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "ADD"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "SWAP3"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "SWAP2"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "JUMP"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "STOP"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "JUMPDEST"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "JUMP"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "JUMPDEST"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "STOP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "POP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "JUMP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "MLOAD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP5"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP4"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP3"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "AND"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "AND"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP2"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP4"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "POP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "POP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "POP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "POP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "MLOAD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP2"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SUB"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "RETURN"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMP"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "GT"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "ISZERO"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMPI"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "INVALID"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "MLOAD"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "DUP1"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "SWAP2"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "SUB"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "RETURN"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "JUMPDEST"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP1"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "SWAP1"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "SLOAD"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "SWAP1"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "EXP"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "SWAP1"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DIV"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "AND"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "AND"
										},
										{
											"begin": 408,
											"end": 418,
											"name": "CALLER"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "AND"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "ISZERO"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "ISZERO"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "REVERT"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 711,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 706,
											"end": 711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "EXP"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SLOAD"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "NOT"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "AND"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "DUP4"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "GT"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "JUMPI"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "INVALID"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "JUMPDEST"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "MUL"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "OR"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SSTORE"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 728,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "JUMPDEST"
										},
										{
											"begin": 504,
											"end": 516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "DUP2"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "GT"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "ISZERO"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "JUMPI"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "INVALID"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "JUMPDEST"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "SLOAD"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "EXP"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "DIV"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 495,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "DUP2"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "GT"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "ISZERO"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "JUMPI"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "INVALID"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "JUMPDEST"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "EQ"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "ISZERO"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "ISZERO"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "ISZERO"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "JUMPI"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "REVERT"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 487,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 543,
											"end": 557,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "DUP2"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "GT"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "ISZERO"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "JUMPI"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "INVALID"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "SWAP1"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "SLOAD"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "SWAP1"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "EXP"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "SWAP1"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "DIV"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 534,
											"end": 539,
											"name": "AND"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "DUP2"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "GT"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "ISZERO"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "JUMPI"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "INVALID"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "EQ"
										},
										{
											"begin": 533,
											"end": 616,
											"name": "DUP1"
										},
										{
											"begin": 533,
											"end": 616,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 533,
											"end": 616,
											"name": "JUMPI"
										},
										{
											"begin": 533,
											"end": 616,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "DUP1"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "DUP2"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "GT"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "ISZERO"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "INVALID"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "SWAP1"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "SLOAD"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "SWAP1"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "EXP"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "SWAP1"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "DIV"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 564,
											"end": 569,
											"name": "AND"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "DUP2"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "GT"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "ISZERO"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "INVALID"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "EQ"
										},
										{
											"begin": 563,
											"end": 615,
											"name": "DUP1"
										},
										{
											"begin": 563,
											"end": 615,
											"name": "ISZERO"
										},
										{
											"begin": 563,
											"end": 615,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 563,
											"end": 615,
											"name": "JUMPI"
										},
										{
											"begin": 563,
											"end": 615,
											"name": "POP"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "DUP1"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "SWAP1"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "SLOAD"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "SWAP1"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "EXP"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "SWAP1"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "DIV"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "AND"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "AND"
										},
										{
											"begin": 595,
											"end": 605,
											"name": "CALLER"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "AND"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "EQ"
										},
										{
											"begin": 563,
											"end": 615,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 563,
											"end": 615,
											"name": "JUMPDEST"
										},
										{
											"begin": 533,
											"end": 616,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 533,
											"end": 616,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "ISZERO"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "ISZERO"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "JUMPI"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "REVERT"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "JUMPDEST"
										},
										{
											"begin": 789,
											"end": 796,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 789,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 789,
											"end": 804,
											"name": "ADD"
										},
										{
											"begin": 789,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "DUP2"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "SLOAD"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "SWAP3"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "ADD"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "SWAP2"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "SWAP1"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "SSTORE"
										},
										{
											"begin": 789,
											"end": 806,
											"name": "POP"
										},
										{
											"begin": 837,
											"end": 840,
											"name": "TIMESTAMP"
										},
										{
											"begin": 817,
											"end": 824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD"
										},
										{
											"begin": 817,
											"end": 840,
											"name": "DUP2"
										},
										{
											"begin": 817,
											"end": 840,
											"name": "SWAP1"
										},
										{
											"begin": 817,
											"end": 840,
											"name": "SSTORE"
										},
										{
											"begin": 817,
											"end": 840,
											"name": "POP"
										},
										{
											"begin": 866,
											"end": 876,
											"name": "CALLER"
										},
										{
											"begin": 851,
											"end": 858,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 851,
											"end": 863,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 851,
											"end": 863,
											"name": "ADD"
										},
										{
											"begin": 851,
											"end": 863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "EXP"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "DUP2"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "SLOAD"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "DUP2"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "MUL"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "NOT"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "AND"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "SWAP1"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "DUP4"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "AND"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "MUL"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "OR"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "SWAP1"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "SSTORE"
										},
										{
											"begin": 851,
											"end": 876,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 886,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SLOAD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SLOAD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SLOAD"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "EXP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DIV"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "AND"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "POP"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "DUP4"
										},
										{
											"begin": 236,
											"end": 258,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMPDEST"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "SLOAD"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "EXP"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "DIV"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 283,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeState(uint8)": "268f1153",
							"counter()": "61bc221a",
							"increments()": "56aa2dc5",
							"state()": "c19d93fb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"increments\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"name\":\"counter\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Solidity_Data_Types/State.sol\":\"StateFull\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Solidity_Data_Types/State.sol\":{\"keccak256\":\"0x6b226ca4257eebd5417eb2f4f821ea00e50d8d1b5591ab8c4cfe53ff32cb4d5e\",\"urls\":[\"bzzr://7abe420c88dd880c568b29ed68eceb82b371c48813dcdd562e5bd65d6332bdca\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Solidity_Data_Types/State.sol": {
				"ast": {
					"absolutePath": "Solidity_Data_Types/State.sol",
					"exportedSymbols": {
						"StateFull": [
							107
						]
					},
					"id": 108,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107
							],
							"name": "StateFull",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StateFull.State",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "Locked",
											"nodeType": "EnumValue",
											"src": "68:6:0"
										},
										{
											"id": 3,
											"name": "Unlocked",
											"nodeType": "EnumValue",
											"src": "76:8:0"
										},
										{
											"id": 4,
											"name": "Restricted",
											"nodeType": "EnumValue",
											"src": "86:10:0"
										}
									],
									"name": "State",
									"nodeType": "EnumDefinition",
									"src": "55:43:0"
								},
								{
									"canonicalName": "StateFull.Counter",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 7,
											"name": "counter",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "134:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "134:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "160:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "160:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"name": "addr",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "188:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "188:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 107,
									"src": "106:102:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 14,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "216:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "216:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"name": "counter",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "236:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$12_storage",
										"typeString": "struct StateFull.Counter"
									},
									"typeName": {
										"contractScope": null,
										"id": 15,
										"name": "Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 12,
										"src": "236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$12_storage_ptr",
											"typeString": "struct StateFull.Counter"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"name": "state",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "265:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$5",
										"typeString": "enum StateFull.State"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 5,
										"src": "265:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$5",
											"typeString": "enum StateFull.State"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "315:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 22,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "336:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "336:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "328:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "328:18:0"
											}
										]
									},
									"documentation": null,
									"id": 27,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:0:0"
									},
									"scope": 107,
									"src": "294:60:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "381:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 30,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "408:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "408:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 32,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "422:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "408:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															126
														],
														"referencedDeclaration": 125,
														"src": "400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "400:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "400:28:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "438:1:0"
											}
										]
									},
									"documentation": null,
									"id": 38,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:0:0"
									},
									"src": "362:85:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "475:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$5",
																"typeString": "enum StateFull.State"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "495:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$5",
																	"typeString": "enum StateFull.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 42,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "504:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																		"typeString": "type(enum StateFull.State)"
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Locked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "504:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$5",
																	"typeString": "enum StateFull.State"
																}
															},
															"src": "495:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															126
														],
														"referencedDeclaration": 125,
														"src": "487:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "487:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "487:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_enum$_State_$5",
																			"typeString": "enum StateFull.State"
																		},
																		"id": 51,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 48,
																			"name": "state",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "534:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_State_$5",
																				"typeString": "enum StateFull.State"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 49,
																				"name": "State",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5,
																				"src": "543:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																					"typeString": "type(enum StateFull.State)"
																				}
																			},
																			"id": 50,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "Unlocked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "543:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_State_$5",
																				"typeString": "enum StateFull.State"
																			}
																		},
																		"src": "534:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 52,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "533:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_enum$_State_$5",
																						"typeString": "enum StateFull.State"
																					},
																					"id": 56,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 53,
																						"name": "state",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 18,
																						"src": "564:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_State_$5",
																							"typeString": "enum StateFull.State"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 54,
																							"name": "State",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5,
																							"src": "573:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																								"typeString": "type(enum StateFull.State)"
																							}
																						},
																						"id": 55,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "Restricted",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "573:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_State_$5",
																							"typeString": "enum StateFull.State"
																						}
																					},
																					"src": "564:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 57,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "563:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 61,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 58,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 122,
																							"src": "595:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 59,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "595:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 60,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "609:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "595:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 62,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "594:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "563:52:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 64,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "562:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "533:83:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															126
														],
														"referencedDeclaration": 125,
														"src": "524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "524:93:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "524:93:0"
											},
											{
												"id": 68,
												"nodeType": "PlaceholderStatement",
												"src": "622:1:0"
											}
										]
									},
									"documentation": null,
									"id": 70,
									"name": "canExecute",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:0:0"
									},
									"src": "455:176:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "693:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 77,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum StateFull.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 78,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "714:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$5",
															"typeString": "enum StateFull.State"
														}
													},
													"src": "706:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$5",
														"typeString": "enum StateFull.State"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "706:14:0"
											}
										]
									},
									"documentation": null,
									"id": 82,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 75,
											"modifierName": {
												"argumentTypes": null,
												"id": 74,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 38,
												"src": "683:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "683:9:0"
										}
									],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "_state",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$5",
													"typeString": "enum StateFull.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 71,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 5,
													"src": "662:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$5",
														"typeString": "enum StateFull.State"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "661:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "693:0:0"
									},
									"scope": 107,
									"src": "641:87:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "776:110:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "789:17:0",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 87,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "789:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$12_storage",
																"typeString": "struct StateFull.Counter storage ref"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "counter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "789:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "789:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 92,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$12_storage",
																"typeString": "struct StateFull.Counter storage ref"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "817:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 95,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "837:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "817:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "817:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 98,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$12_storage",
																"typeString": "struct StateFull.Counter storage ref"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "851:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 101,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "866:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "866:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "851:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "851:25:0"
											}
										]
									},
									"documentation": null,
									"id": 106,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 85,
											"modifierName": {
												"argumentTypes": null,
												"id": 84,
												"name": "canExecute",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 70,
												"src": "765:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "765:10:0"
										}
									],
									"name": "increments",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:0"
									},
									"scope": 107,
									"src": "736:150:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 108,
							"src": "27:864:0"
						}
					],
					"src": "0:893:0"
				},
				"id": 0
			}
		}
	}
}